mutation createPackage($owner: String!, $name: String!) {
  createPackage(owner: $owner, name: $name) {
    package {
      id
      ownerAvatar
      ownerName
      packageName
      stars
      issues
      mentionableUsers
    }
  }
}

mutation createPackageTag($tagName: String!, $packageId: ID!, $ownerName: String!, $packageName: String!) {
  createPackageTag(tagName: $tagName, packageId: $packageId, ownerName: $ownerName, packageName: $packageName) {
    packageTag {
      packageId
      tagName
      ownerName
      packageName
    }
  }
}

mutation deletePackageTag($tagName: String!, $packageId: ID!) {
	deletePackageTag(tagName: $tagName, packageId: $packageId) {
    packageTag {
      packageId
      tagName
    }
  }	
}

mutation createPackageRecommendation(
  $packageId: ID!, 
  $ownerName: String!,
  $packageName: String!,
  $recommendationPackageId: ID!,
  $recommendationOwnerName: String!,
  $recommendationPackageName: String!
) {
  createPackageRecommendation(
    packageId: $packageId,
    ownerName: $ownerName,
    packageName: $packageName,
    recommendationPackageId: $recommendationPackageId,
    recommendationOwnerName: $recommendationOwnerName,
    recommendationPackageName: $recommendationPackageName
  ) {
    packageRecomendation {
      packageId
      ownerName
      packageName
      recommendationPackageId
      recommendationOwnerName
      recommendationPackageName
    }
  }
}

mutation deletePackageRecommendation(
  $packageId: ID!, 
  $recommendationPackageId: ID!,
  $recommendationOwnerName: String!,
  $recommendationPackageName: String!
) {
  deletePackageRecommendation(
    packageId: $packageId,
    recommendationPackageId: $recommendationPackageId,
    recommendationOwnerName: $recommendationOwnerName,
    recommendationPackageName: $recommendationPackageName
  ) {
    packageRecomendation {
      packageId
      recommendationPackageId
      recommendationOwnerName
      recommendationPackageName
    }
  }
}